import tkinter.messagebox
import pymysql as sql
import tkinter as tk
from tkinter import *
from tkinter import ttk
import paddlex as pdx
import cv2
import speech
from PIL import Image, ImageTk  # 图像控件
import os.path
import threading
import time
import os
import balabalaspeech as bs
usn=''
upsd=0
besure=''
text = '检测结果'
timer = None
def login_destory():
    login_Window.destroy()
def test_speech_login_successful():
    speech.say("登入成功，正在接入泰坦")
    speech.say("风速3节，风向274，距离95公尺，投掷质量89公斤,相信我,即将为您接入神经网络,请稍后")
def test_login_fall():
    speech.say("无法验证身份信息,你还不是一名合格的铁驭")
def test_loginwindow():
    speech.say("你好，铁驭")
    speech.say("我是BT7274，先锋级泰坦，你可以叫我BT")
def test_res_button_on():
    speech.say("正在链入天顶数据库，请稍后")
def test_res_usnfall():
    speech.say("错误！铁驭信息已存在")
def test_res_successful():
    speech.say("已完成身份注入，菜鸟，请前往前线")




def login_button_on():
    login_flage =0
    inputusername =login_usn.get()
    print(inputusername)
    inputuserpsd = login_upsd.get()
    print(inputuserpsd)
    sql = 'select * from user_info'
    data = cur.execute(sql)
    all=cur.fetchall()
    for item in all:
        if (inputusername in item[1] and inputuserpsd in item[2] and inputusername!='' and inputuserpsd!=''):
            login_flage =1
    if(login_flage == 1):
        thread_login = threading.Thread(target=test_speech_login_successful)
        thread_login.start()
        # speech.say('登入成功，正在接入泰坦')
        tkinter.messagebox.showinfo("登入成功",'程序睡午觉呢，等会奥')
        # speech.say('你好铁驭，我是B2，即将为你接入神经网络,请稍后')
        login_Window.destroy()
        os.system('python jiancespeech.py')

    else:
         thread_loginfall=threading.Thread(target=test_login_fall)
         thread_loginfall.start()
         tk.messagebox.showinfo("用户名或密码错误",'滚去注册记得充钱！')



def successful():
    tk.messagebox.showinfo("注册成功，点击确定转回初始界面","嘿，你丫的")
def regester():
    def reg():
        insert_info =0
        res_usn=resUser_Entry.get()
        res_upsd=reslogin_Entry.get()
        print(res_upsd)
        sql = 'select * from user_info'
        data = cur.execute(sql)
        all = cur.fetchall()
        for item in all:
            if(res_usn == item[1]):
                insert_info=1
                thread_resfall =threading.Thread(target=test_res_usnfall)
                thread_resfall.start()
                tk.messagebox.showinfo('!!!!','用户名已被注册')
                regester_Window.destroy()
                break
        if(insert_info==0):
            sql = 'select * from user_info'
            data = cur.execute(sql)
            all = cur.fetchall()
            thread_res_suc =threading.Thread(target=test_res_successful)
            thread_res_suc.start()
            tk.messagebox.showinfo("okok", '欢迎入坑')
            sql = 'insert into user_info (name,psw) value(%s,%s)'
            val = (res_usn, res_upsd)
            cur.execute(sql, val)
            con.commit()
            regester_Window.destroy()



    thread_res = threading.Thread(target=test_res_button_on)
    thread_res.start()
    loginusername=login_usn.get()
    loginuserpsd=login_upsd.get()
    # regester_Window = tk.Toplevel()
    regester_Window = tk.Toplevel()
    regester_Window.resizable(False,False)
    regester_Window.title('勇士，今天也要充满8万哦')
    regester_Window.geometry('1200x800')

    canves_res = tk.Canvas(regester_Window,width=1200,height=800,bg='#fff')
    bg_file = tk.PhotoImage(file='login_images/fengmian3.png') #哎，这里后续在研究
    bg = canves_res.create_image(0, 0, anchor='nw',image=bg_file)
    canves_res.pack()

    besure=tk.Button(regester_Window,text='考虑好，我可没写修改功能',anchor='nw',command=reg)
    besure.pack()
    canves_res.create_window(596,300,width=200,height=80,window=besure,)

    resUser_Entry = tk.Entry(regester_Window,bg='#fff',)
    resUser_Entry.pack()
    canves_res.create_window(596,106,width=400,height=80,window=resUser_Entry)

    reslogin_Entry = tk.Entry(regester_Window,bg='#fff')
    reslogin_Entry.pack()
    canves_res.create_window(596,200,width=400,height=80,window=reslogin_Entry)









con=sql.connect(host='localhost',user='root',password='092213',database='new',charset='utf8')
cur=con.cursor()
# 生成数据库
sql='select * from user_info'
#获取结果
data = cur.execute(sql)
# 获取所有记录  fetchall--获取所有记录   fetchmany--获取多条记录，需传参  fetchone--获取一条记录
all=cur.fetchall()
for item in all:
    print(item)

# 输出查询结果

# 关闭游标
# cur.close()
# # 关闭数据库连接，目的为了释放内存
# cur.close()



login_Window = tk.Tk()
login_Window.resizable(False,False)
login_Window.title('别看我，我什么都不知道')
login_Window.geometry('800x600')

canves =tk.Canvas(login_Window,width=800,height=600,bg='#fff')
bg_file = tk.PhotoImage(file='login_images/fengmian3.png')
bg = canves.create_image(0, 0, anchor='nw',image=bg_file)
canves.pack()

bg_file1 = tk.PhotoImage(file='login_images/button_zhuce.png')
bg1 = canves.create_image(0, 0, anchor='nw',)
regester =tk.Button(fg='#C8EEFF',text='点我开启屠龙之旅',image=bg_file1,command=regester,)
regester.pack()
canves.create_window(420,355,width=220,height=80,anchor='nw',window=regester) #待修改位置

bg_file2 = tk.PhotoImage(file='login_images/button_qidong.png')
bg2 = canves.create_image(0, 0, anchor='nw',)
login = tk.Button(text='点我驰骋海鲜市场',command=login_button_on,image=bg_file2)
login.pack()
canves.create_window(140,355,width=220,height=80,anchor='nw',window=login) #待修改位置

login_usn =tk.Entry(login_Window,)
login_usn.pack()
canves.create_window(240,150,width=300,height=40,anchor='nw',window=login_usn)

login_upsd =tk.Entry(login_Window,)
login_upsd.pack()
canves.create_window(240,200,width=300,height=40,anchor='nw',window=login_upsd)
menubar = Menu(login_Window)
fmenu1 = Menu(login_Window)
for item in ['新建', '打开', '保存', '另存为']:
    # 如果该菜单时顶层菜单的一个菜单项，则它添加的是下拉菜单的菜单项。
    fmenu1.add_command(label=item)

fmenu2 = Menu(login_Window)
for item in ['精度', '间隔', '分辨率']:
    fmenu2.add_command(label=item)

fmenu3 = Menu(login_Window)
for item in ['默认参数', '超级参数']:
    fmenu3.add_command(label=item)

fmenu4 = Menu(login_Window)
for item in ["版权信息", "其他说明"]:
    fmenu4.add_command(label=item)
menubar.add_cascade(label="文件", menu=fmenu1)
menubar.add_cascade(label="选项", menu=fmenu2)
menubar.add_cascade(label="参数", menu=fmenu3)
menubar.add_cascade(label="视觉设备")
menubar.add_cascade(label="传感器")
menubar.add_cascade(label="自动控制")
menubar.add_cascade(label="关于", menu=fmenu4)
login_Window['menu']=menubar
thread_loginwindow=threading.Thread(target=test_loginwindow)
thread_loginwindow.start()

login_Window.mainloop()
